#import "./DefinitionPathFragment.graphql"

query SchemaPageQuery($schemaId: String!, $sdfDocumentId: String!, $withSdfDocument: Boolean!) {
    schemaById(id: $schemaId) {
        aka
        comments
        description
        entityRelations {
            comments
            relations {
                name
                relationPredicate
                relationObjects
            }
            relationSubject
        }
        label
        name
        order {
            comments
            flags
            ... on BeforeAfterStepOrder {
                after
                before
            }
            ... on ContainerContainedStepOrder {
                contained
                container
            }
            ... on OverlapsStepOrder {
                overlaps
            }
        }
        path {
            ...DefinitionPathFragment
        }
        references
        slots {
            aka
            comments
            entityTypes
            id
            label
            path {
                ...DefinitionPathFragment
            }
            references
            refvar
            roleName
        }
        steps {
            achieves
            aka
            comments
            id
            label
            maxDuration {
                string
            }
            minDuration {
                string
            }
            name
            participants {
                aka
                comments
                entityTypes
                id
                label
                name
                path {
                    ...DefinitionPathFragment
                }
                references
                refvar
                role
            }
            path {
                ...DefinitionPathFragment
            }
            provenances
            references
            requires
            type
        }
        ta2
        template
        version
    }

    sdfDocumentById(id: $sdfDocumentId) @include(if: $withSdfDocument) {
        label
    }
}
