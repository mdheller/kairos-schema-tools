#import "./DefinitionPathIdsFragment.graphql"
#import "./EntityTypesFragment.graphql"
#import "./NamespacePrefixFragment.graphql"

query SchemaPageQuery($schemaId: String!, $sdfDocumentId: String!) {
    schemaById(id: $schemaId) {
        aka
        comments
        confidence
        description
        entities {
            comments
            entityTypes {
                ...EntityTypesFragment
            }
            id
            label
            name
            privateData
            references
            refvar
        }
        entityRelations {
            comments
            confidence
            id
            modalities
            name
            object
            references
            predicate
            provenances
            relationProvenance
            subject
            ta1ref
        }
        label
        name
        order {
            comments
            confidence
            flags
            id
            label
            provenances
            ta1ref
            ... on BeforeAfterOrder {
                after
                before
            }
            ... on ContainerContainedOrder {
                contained
                container
            }
            ... on OverlapsOrder {
                overlaps
            }
        }
        path {
            ...DefinitionPathIdsFragment
            sdfDocument {
                namespacePrefixes {
                    ...NamespacePrefixFragment
                }
            }
        }
        privateData
        provenanceData {
            boundingBox
            childId
            comments
            endTime
            id
            keyframes
            label
            length
            mediaType
            offset
            parentIds
            path {
                ...DefinitionPathIdsFragment
            }
            privateData
            startTime
        }
        references
        slots {
            aka
            comments
            entityTypes {
                ...EntityTypesFragment
            }
            id
            label
            path {
                ...DefinitionPathIdsFragment
            }
            privateData
            references
            refvar
            roleName
        }
        steps {
            list {
                achieves
                aka
                comments
                confidence
                id
                label
                maxDuration {
                    string
                }
                minDuration {
                    string
                }
                modalities
                name
                participants {
                    aka
                    comments
                    entityTypes {
                        ...EntityTypesFragment
                    }
                    id
                    label
                    name
                    path {
                        ...DefinitionPathIdsFragment
                    }
                    privateData
                    references
                    refvar
                    role
                    values {
                        comments
                        confidence
                        entity
                        label
                        modalities
                        privateData
                        provenances
                    }
                }
                path {
                    ...DefinitionPathIdsFragment
                }
                privateData
                provenances
                references
                requires
                ta1ref
                temporalObjects {
                    absoluteTime {
                        string
                    }
                    comments
                    confidence
                    duration {
                        string
                    }
                    earliestEndTime {
                        string
                    }
                    earliestStartTime {
                        string
                    }
                    label
                    latestEndTime {
                        string
                    }
                    latestStartTime {
                        string
                    }
                    provenances
                }
                type
            }
        }
        ta2
        template
        version
    }

    sdfDocumentById(id: $sdfDocumentId) {
        label
    }
}
