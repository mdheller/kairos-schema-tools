version: 2.1
jobs:
  app-docker:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build
          command: |
            docker-compose build
      - run:
          name: Run
          background: true
          command: |
            docker-compose up --abort-on-container-exit
      - run:
          name: Wait for the server to start
          command: |
            sleep 30
            docker exec kairos-schema-tools-app curl --retry 10 --retry-connrefused -s http://localhost
      - run:
          name: Push to DockerHub
          command: |
            docker login -u $DOCKER_ID -p $DOCKER_PASSWORD && docker-compose push app
  scala:
    docker:
      - image: circleci/openjdk:8
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - restore_cache:
          key: sbt-cache-v1
      - run:
          name: Build and test
          command: |
            cp -p -R /tmp/workspace/dist/gui public
            sbt test playUpdateSecret dist
            cd target/universal && unzip -qq kairos-schema-tools-app*.zip && rm kairos-schema-tools-app*.zip && mkdir ~/dist && mv kairos-schema-tools-app-*-SNAPSHOT ~/dist/app
      - store_test_results:
          path: target/test-reports
      - persist_to_workspace:
          root: ~/
          paths:
            - dist/app
      - save_cache:
          key: sbt-cache-v1
          paths:
            - "~/.ivy2/cache"
            - "~/.m2"
            - "~/.sbt"
  ts:
    working_directory: ~/project
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          key: ts-dependency-cache-v1-{{ checksum "gui/package.json" }}
      - run:
          name: Install dependencies
          command: |
            cd gui
            npm install
      - save_cache:
          key: ts-dependency-cache-v1-{{ checksum "gui/package.json" }}
          paths:
            - gui/node_modules
      - run:
          name: Build
          command: |
            cd gui
            npm run build
            mkdir ~/dist
            mv dist ~/dist/gui
      - persist_to_workspace:
          root: ~/
          paths:
            - dist/gui
orbs:
  cypress: cypress-io/cypress@1
  slack: circleci/slack@3.4.2
workflows:
  version: 2
  build:
    jobs:
      - cypress/install:
          cache-key: 'npm-packages-v2-{{ arch }}-{{ checksum "test/integration/package.json" }}'
          requires:
            - scala
          working_directory: test/integration
          post-steps:
            - slack/status:
                fail_only: true
      - cypress/run:
          attach-workspace: true
          cache-key: 'npm-packages-v2-{{ arch }}-{{ checksum "test/integration/package.json" }}'
          post-steps:
            - store_test_results:
                path: test/integration/results
            - store_artifacts:
                path: test/integration/cypress/screenshots
            - store_artifacts:
                path: test/integration/cypress/videos
            - slack/status
          requires:
            - cypress/install
          start: |
            pwd
            cp ~/project/.circleci/cypress.json .
            apt-get update && apt-get install -y default-jre
            cd ~/dist/app
            bin/kairos-schema-tools-app -Dtest
          wait-on: "http-get://localhost:9000/index.html"
          working_directory: test/integration
      - app-docker:
          filters:
            branches:
              only: master
          post-steps:
            - slack/status
      - scala:
          requires:
            - ts
          post-steps:
            - slack/status:
                fail_only: true
      - ts:
          post-steps:
            - slack/status:
                fail_only: true
